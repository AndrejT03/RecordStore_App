@using RecordStore.Domain.DomainModels
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IPagedList<Country>

@{
    ViewData["Title"] = "Countries";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .interactive-btn {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

    .interactive-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 0.4rem 0.8rem rgba(0,0,0,.15);
    }
</style>

<h1 style="margin-top: 20px">Countries</h1>

<div class="row mb-4 align-items-end">
    <div class="col-md-3">
        @if (User.IsInRole("Administrator"))
        {
            <a asp-action="Create" class="btn btn-primary interactive-btn">Add Country</a>
        }
    </div>
    <div class="col-md-5">
        @using (Html.BeginForm("Index", "Countries", FormMethod.Get))
        {
            <div class="input-group">
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", placeholder = "Search by Name or Capital..." })
                <div class="input-group-append">
                    <input type="submit" value="Search" class="btn btn-outline-secondary" />
                </div>
            </div>
        }
    </div>
    <div class="col-md-4">
        @using (Html.BeginForm("Index", "Countries", FormMethod.Get, new { id = "sortForm" }))
        {
            <label for="sortOrder" class="form-label">Sort by:</label>
            @Html.DropDownList("sortOrder", new List<SelectListItem>
            {
                new SelectListItem { Text = "Name (A-Z)", Value = "" },
                new SelectListItem { Text = "Name (Z-A)", Value = "name_desc" },
                new SelectListItem { Text = "Capital (A-Z)", Value = "capital" },
                new SelectListItem { Text = "Capital (Z-A)", Value = "capital_desc" }
                }, new { @class = "form-control", onchange = "document.getElementById('sortForm').submit();" })
                }
    </div>
</div>

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-12 col-sm-6 col-md-4 col-lg-3 mb-4">
            <div class="card text-center shadow-sm h-100">
                <div class="card-body d-flex flex-column">
                    <img src="@item.Flag" alt="@item.Name flag" class="rounded-circle mx-auto" style="width: 80px; height: 80px; object-fit: cover;" />
                    <h5 class="card-title mt-3">@item.Name</h5>
                    <div class="mt-auto pt-3">
                        <div class="btn-group" role="group">
                            @if (User.IsInRole("Administrator"))
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-secondary me-1 interactive-btn">Edit</a>
                            }
                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info interactive-btn">Details</a>
                            @if (User.IsInRole("Administrator"))
                            {
                                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger ms-1 interactive-btn">Delete</a>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="d-flex justify-content-center mt-4">
    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
        new PagedListRenderOptions
        {
            ContainerDivClasses = new[] { "pagination-container" },
            LiElementClasses = new List<string> { "page-item" },
            PageClasses = new List<string> { "page-link", "interactive-btn" }
        })
</div>