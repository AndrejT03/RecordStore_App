@model RecordStore.Domain.DomainModels.Record
@using System.Security.Claims

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .interactive-btn {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

    .interactive-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 0.4rem 0.8rem rgba(0,0,0,.15);
    }

    .secret-link {
        color: inherit;
        text-decoration: none;
        padding: 3px 6px;
        border-radius: 5px;
        transition: background-color 0.2s ease-in-out, color 0.2s ease-in-out;
    }

    .secret-link:hover {
        background-color: #e9ecef;
        text-decoration: none;
        color: #000;
    }

    .rating-stars {
        color: #ffc107;
    }

    .review-card {
        border: 1px solid #e9ecef;
        border-radius: .25rem;
        padding: 15px;
        margin-bottom: 15px;
        background-color: #f8f9fa;
    }

    .popover {
        max-width: 320px;
    }

    .artist-popover-content img {
        width: 70px;
        height: 80px;
        border-radius: 5%;
        object-fit: cover;
        flex-shrink: 0;
    }

    .artist-popover-content .popover-header-title {
        font-size: 1.1rem;
        font-weight: bold;
        margin-bottom: 5px;
    }

    .artist-popover-content .popover-bio {
        font-size: 0.85rem;
        color: #6c757d;
        margin-bottom: 0;
    }

    .track-input-group {
        display: flex;
        gap: 10px;
        align-items: center;
        margin-bottom: 15px;
    }
</style>

<div class="container my-5">
    <div class="row">
        <div class="col-lg-5 mb-4 mb-lg-0">
            <img src="@Model.CoverURL" alt="Cover for @Model.Title" class="img-fluid rounded shadow-sm" style="width: 400px; height: 400px; object-fit: cover;" />
        </div>

        <div class="col-lg-7">
            <h2>@Model.Title</h2>
            <div>
                @if (TempData["ErrorMessage"] != null)
                {
                    <div class="alert alert-danger" role="alert">
                        @TempData["ErrorMessage"]
                    </div>
                }
            </div>
            @if (Model.Artist != null)
            {
                <h4 class="text-muted mb-3">
                    by
                    <a href="@Url.Action("Details", "Artists", new { id = Model.Artist.Id })"
                       class="secret-link"
                       tabindex="0"
                       data-bs-toggle="popover"
                       data-bs-trigger="hover focus"
                       data-bs-html="true"
                       title="Artist Preview"
                       data-bs-content-id="#artistPopoverContent-@Model.Artist.Id">
                        @Model.Artist.Name
                    </a>
                </h4>

                <div id="artistPopoverContent-@Model.Artist.Id" style="display: none;">
                    <div class="artist-popover-content d-flex">
                        <img src="@Model.Artist.Picture" alt="Photo of @Model.Artist.Name" />
                        <div class="ms-3">
                            <h5 class="popover-header-title">@Model.Artist.Name</h5>
                            <p class="mb-1">Origin: @Model.Artist.Country.Name</p>
                            <p class="popover-bio">
                                @if (!string.IsNullOrEmpty(Model.Artist.Bio))
                                {
                                    @(Model.Artist.Bio.Length > 150 ? Model.Artist.Bio.Substring(0, 150) + "..." : Model.Artist.Bio)
                                }
                                else
                                {
                                    @("No biography available.")
                                }
                            </p>
                        </div>
                    </div>
                </div>
            }

            <p class="mb-3">
                Rating: 
                @if(ViewData["AverageRating"] == "N/A")
                {
                    <strong>@ViewData["AverageRating"]</strong>
                }
                else
                {
                    <strong class="rating-stars">★</strong>
                    <strong>@ViewData["AverageRating"]</strong>
                }
            </p>

            <div class="card my-4" style="width: 50%;">
                <div class="card-body p-3">
                    <h3 class="card-title mb-3">Price: <strong>@String.Format("{0:C}", Model.Price)</strong></h3>

                    @if (Model.StockQuantity > 0)
                    {
                        <p class="text-success fw-bold mb-3"><i class="fas fa-check-circle me-2"></i>In Stock (@Model.StockQuantity available)</p>
                    }
                    else
                    {
                        <p class="text-danger fw-bold mb-3"><i class="fas fa-times-circle me-2"></i>Out of Stock</p>
                    }

                    <div class="d-grid gap-2">
                        @if (Model.StockQuantity > 0)
                        {
                            @if (User.Identity.IsAuthenticated)
                            {
                                <button type="button" class="btn btn-success interactive-btn" data-bs-toggle="modal" data-bs-target="#addToCartModal">
                                    <i class="fas fa-shopping-cart me-2"></i> Add to Cart
                                </button>
                            }
                            else
                            {
                                <a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "Records", new { id = Model.Id })" class="btn btn-success interactive-btn">
                                    <i class="fas fa-shopping-cart me-2"></i> Add to Cart
                                </a>
                            }
                        }
                        else
                        {
                            <button type="button" class="btn btn-success disabled" disabled>
                                <i class="fas fa-shopping-cart me-2"></i> Add to Cart
                            </button>
                        }
                    </div>
                </div>
            </div>

            @if (User.IsInRole("Administrator"))
            {
                <div class="mt-3">
                    <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-sm btn-warning interactive-btn">Edit</a>
                    <button type="button" class="btn btn-sm btn-danger ms-1 interactive-btn" data-bs-toggle="modal" data-bs-target="#deleteConfirmationModal">
                        Delete
                    </button>
                </div>
            }
        </div>
    </div>

    <div class="row mt-5">
        <div class="col-12">
            <ul class="nav nav-tabs" id="recordTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" type="button" role="tab" aria-controls="details" aria-selected="true">Details</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="tracklist-tab" data-bs-toggle="tab" data-bs-target="#tracklist" type="button" role="tab" aria-controls="tracklist" aria-selected="false">Tracklist</button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="reviews-tab" data-bs-toggle="tab" data-bs-target="#reviews" type="button" role="tab" aria-controls="reviews" aria-selected="false">Reviews (@Model.Reviews?.Count)</button>
                </li>
            </ul>
            <div class="tab-content card p-4" id="recordTabContent">
                <div class="tab-pane fade show active" id="details" role="tabpanel" aria-labelledby="details-tab">
                    <h5>Product Details</h5>
                    <ul class="list-unstyled">
                        <li><strong>Release Year:</strong> @Model.ReleaseYear</li>
                        <li><strong>Format:</strong> @Model.Format</li>
                        <li><strong>Genre:</strong> @Model.Genre</li>
                        <li>
                            <strong>Record Label:</strong>
                            @if (Model.RecordLabel != null)
                            {
                                @if (User.IsInRole("Administrator"))
                                {
                                    <a href="@Url.Action("Details", "RecordLabels", new { id = Model.RecordLabel.Id })"
                                       class="secret-link"
                                       tabindex="0"
                                       data-bs-toggle="popover"
                                       data-bs-trigger="hover focus"
                                       data-bs-html="true"
                                       title="Record Label Preview"
                                       data-bs-content-id="#recordLabelPopoverContent-@Model.RecordLabel.Id">
                                        @Model.RecordLabel.Name
                                    </a>
                                }
                                else
                                {
                                    <span class="secret-link"
                                          tabindex="0"
                                          data-bs-toggle="popover"
                                          data-bs-trigger="hover focus"
                                          data-bs-html="true"
                                          title="Record Label Preview"
                                          data-bs-content-id="#recordLabelPopoverContent-@Model.RecordLabel.Id">
                                        @Model.RecordLabel.Name
                                    </span>
                                }
                                <div id="recordLabelPopoverContent-@Model.RecordLabel.Id" style="display: none;">
                                    <div>
                                        <h5 class="popover-header-title">@Model.RecordLabel.Name</h5>
                                        @if (Model.RecordLabel.Country != null)
                                        {
                                            <p class="mb-0">
                                                <i class="fas fa-map-marker-alt me-1"></i>
                                                Based in @Model.RecordLabel.City, @Model.RecordLabel.Country.Name
                                            </p>
                                        }
                                    </div>
                                </div>
                            }
                            else
                            {
                                <span>N/A</span>
                            }
                        </li>
                        <li><strong>Reissue:</strong> @(Model.IsReissue ? "Yes" : "No")</li>
                    </ul>
                </div>
                <div class="tab-pane fade" id="tracklist" role="tabpanel" aria-labelledby="tracklist-tab">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="mb-0">Tracklist</h4>
                        @if (User.IsInRole("Administrator"))
                        {
                            <button type="button" class="btn btn-outline-warning interactive-btn" data-bs-toggle="modal" data-bs-target="#addTracklistModal">
                                Add/Edit Tracklist
                            </button>
                        }
                    </div>

                    @if (Model.Tracks != null && Model.Tracks.Any())
                    {
                        <div class="list-group">
                            @foreach (var track in Model.Tracks.OrderBy(t => t.TrackNumber))
                            {
                                <div class="list-group-item d-flex justify-content-between align-items-center">
                                    <div class="d-flex align-items-center">
                                        <span class="fw-bold me-3" style="width: 25px;">@track.TrackNumber.</span>
                                        <div class="flex-grow-1">@track.Title</div>
                                    </div>

                                    <div class="d-flex align-items-center">
                                        <span class="text-muted me-4">@track.DurationFormatted</span>

                                        @if (User.IsInRole("Administrator"))
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-danger interactive-btn" title="Delete Track"
                                                    data-bs-toggle="modal"
                                                    data-bs-target="#deleteTrackModal"
                                                    data-track-id="@track.Id"
                                                    data-track-title="@track.Title">
                                                <i class="fas fa-trash-alt"></i>
                                            </button>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center p-3">
                            <p class="mb-0">No tracklist available for this record.</p>
                            @if (User.IsInRole("Administrator"))
                            {
                                <p class="text-muted small">Click the button above to add one.</p>
                            }
                        </div>
                    }
                </div>
                <div class="tab-pane fade" id="reviews" role="tabpanel" aria-labelledby="reviews-tab">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="mb-0">All Reviews</h4>
                        @if (User.Identity.IsAuthenticated)
                        {
                            <button type="button" class="btn btn-outline-primary interactive-btn" data-bs-toggle="modal" data-bs-target="#addReviewModal">Add Review</button>
                        }
                        else
                        {
                            <a asp-area="Identity" asp-page="/Account/Login" asp-route-returnUrl="@Url.Action("Details", "Records", new { id = Model.Id })" class="btn btn-outline-primary interactive-btn">Add Review</a>
                        }
                    </div>

                    @if (Model.Reviews != null && Model.Reviews.Any())
                    {
                        @foreach (var review in Model.Reviews.OrderByDescending(r => r.DateCreated))
                        {
                            var currentUserId = User.FindFirstValue(System.Security.Claims.ClaimTypes.NameIdentifier);

                            <div class="review-card d-flex align-items-center">

                                <div class="flex-grow-1 me-3">
                                    <p class="mb-1">
                                        <strong>@review.User?.UserName</strong> rated it
                                        <span class="rating-stars">
                                            @for (int i = 0; i < review.Rating; i++)
                                            {
                                                @:★
                                            }
                                        </span>
                                        <span class="text-muted">(@review.Rating/5)</span>
                                    </p>
                                    @if (!string.IsNullOrEmpty(review.Comment))
                                    {
                                        <p class="mb-1"><em>"@review.Comment"</em></p>
                                    }

                                    <small class="text-muted">
                                        @if (review.DateModified.HasValue)
                                        {
                                            <text>edited on @review.DateModified.Value.ToString("dd MMMM yyyy")</text>
                                        }
                                        else
                                        {
                                            <text>on @review.DateCreated.ToString("dd MMMM yyyy")</text>
                                        }
                                    </small>
                                </div>

                                @if (User.Identity.IsAuthenticated && review.UserId == currentUserId)
                                {
                                    <a href="#" class="text-secondary ms-2"
                                       data-bs-toggle="modal"
                                       data-bs-target="#editReviewModal"
                                       data-review-id="@review.Id"
                                       data-review-rating="@review.Rating"
                                       data-review-comment="@review.Comment"
                                       title="Edit your review">
                                        <i class="fas fa-pencil-alt fa-lg interactive-btn"></i>
                                    </a>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        <p>No reviews yet for this record. Be the first to leave one!</p>
                    }
                </div>
            </div>
        </div>
    </div>
    
    <div class="mt-4">
        <a asp-action="Index" class="btn btn-info interactive-btn">&lt; Back to Records</a>
    </div>
</div>

@if (User.IsInRole("Administrator"))
{
    <div class="modal fade" id="addTracklistModal" tabindex="-1" aria-labelledby="addTracklistModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <form asp-controller="Records" asp-action="AddTracklist" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="RecordId" value="@Model.Id" />

                    <div class="modal-header">
                        <h5 class="modal-title" id="addTracklistModalLabel">Add/Edit Tracklist for @Model.Title</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>

                    <div class="modal-body">
                        <p>Edit the existing tracks or add new ones by clicking the "Add Track" button.</p>
                        <div id="trackFieldsContainer" style="max-height: 50vh; overflow-y: auto; padding-right: 15px;">
                            @if (Model.Tracks != null)
                            {
                                var trackIndex = 0;
                                foreach (var track in Model.Tracks.OrderBy(t => t.TrackNumber))
                                {
                                    <div class="row g-2 mb-2 align-items-center track-input-group">
                                        <div class="col-auto">
                                            <span class="fw-bold track-number">@(track.TrackNumber).</span>
                                        </div>
                                        <div class="col">
                                            <input type="text" name="Tracks[@trackIndex].Title" class="form-control" placeholder="Track Title" value="@track.Title" required />
                                        </div>
                                        <div class="col-auto" style="width: 120px;">
                                            <input type="number" name="Tracks[@trackIndex].DurationSeconds" class="form-control" placeholder="Duration (sec)" value="@track.DurationSeconds" />
                                        </div>
                                        <div class="col-auto" style="width: 40px;">
                                        </div>
                                    </div>
                                    trackIndex++;
                                }
                            }
                        </div>
                        <button type="button" id="addTrackRowBtn" class="btn btn-sm btn-outline-success mt-2 interactive-btn">
                            <i class="fas fa-plus me-1"></i> Add Track
                        </button>
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        @if(Model.Tracks.Count==0)
                        {
                            <button type="submit" class="btn btn-success interactive-btn">Save Changes</button>
                        }
                        else
                        {
                            <button type="submit" class="btn btn-warning interactive-btn">Save Changes</button>
                        }
                    </div>
                </form>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="deleteTrackModal" tabindex="-1" aria-labelledby="deleteTrackModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="deleteTrackForm" asp-action="DeleteTrack" method="post">
                @Html.AntiForgeryToken()
                <input type="hidden" id="trackIdToDelete" name="trackId" value="" />
                <input type="hidden" name="recordId" value="@Model.Id" />

                <div class="modal-header">
                    <h5 class="modal-title" id="deleteTrackModalLabel">Confirm Track Deletion</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <p>Are you sure you want to delete the track: <strong id="trackTitleToDelete"></strong>?</p>
                    <p class="text-danger small">This action cannot be undone.</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary interactive-btn" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger interactive-btn">Delete Track</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="addReviewModal" tabindex="-1" aria-labelledby="addReviewModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Reviews" asp-action="Create" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="addReviewModalLabel">Leave a Review for @Model.Title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="RecordId" value="@Model.Id" />
                    <div class="form-group mb-3">
                        <label for="Rating" class="form-label">Rating (1-5)</label>
                        <select name="Rating" class="form-control" required>
                            <option value="">Select a rating...</option>
                            <option value="5">5 - Excellent</option>
                            <option value="4">4 - Very Good</option>
                            <option value="3">3 - Good</option>
                            <option value="2">2 - Fair</option>
                            <option value="1">1 - Poor</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="Comment" class="form-label">Comment</label>
                        <textarea name="Comment" class="form-control" rows="4"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary interactive-btn" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary interactive-btn">Submit Review</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="editReviewModal" tabindex="-1" aria-labelledby="editReviewModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Reviews" asp-action="Edit" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="editReviewModalLabel">Edit Your Review for @Model.Title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="id" id="editReviewId" />
                    <input type="hidden" name="RecordId" value="@Model.Id" />

                    <div class="form-group mb-3">
                        <label for="editRating" class="form-label">Rating (1-5)</label>
                        <select name="Rating" id="editRating" class="form-control" required>
                            <option value="">Select a rating...</option>
                            <option value="5">5 - Excellent</option>
                            <option value="4">4 - Very Good</option>
                            <option value="3">3 - Good</option>
                            <option value="2">2 - Fair</option>
                            <option value="1">1 - Poor</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editComment" class="form-label">Comment</label>
                        <textarea name="Comment" id="editComment" class="form-control" rows="4"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary interactive-btn" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary interactive-btn">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="addToCartModal" tabindex="-1" aria-labelledby="addToCartModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Records" asp-action="AddRecordToCart" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="addToCartModalLabel">Add Record to Your Shopping Cart</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="RecordId" value="@Model.Id" />

                    <div class="form-group mb-3">
                        <label>Title</label>
                        <input disabled class="form-control" value="@Model.Title" />
                    </div>

                    <div class="form-group mb-3">
                        <label for="Quantity">Quantity</label>
                        <input name="Quantity" type="number" class="form-control" value="1" min="1" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary interactive-btn" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success interactive-btn">Confirm and Add</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>
                    Are you sure you want to delete the record
                    <strong> "@Model.Title" </strong>?
                </p>
                <p style="color:red">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary interactive-btn" data-bs-dismiss="modal">Cancel</button>

                <form asp-action="Delete" asp-route-id="@Model.Id" method="post" id="deleteForm">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger interactive-btn">Delete</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {

            var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'))
            var popoverList = popoverTriggerList.map(function (popoverTriggerEl) {
                var contentId = popoverTriggerEl.getAttribute('data-bs-content-id');
                var contentHtml = document.querySelector(contentId).innerHTML;

                return new bootstrap.Popover(popoverTriggerEl, {
                    content: contentHtml,
                    html: true,
                    placement: 'bottom'
                });
            });

            var editReviewModal = document.getElementById('editReviewModal');
            if (editReviewModal) {
                editReviewModal.addEventListener('show.bs.modal', function (event) {
                    var button = event.relatedTarget;
                    var reviewId = button.getAttribute('data-review-id');
                    var rating = button.getAttribute('data-review-rating');
                    var comment = button.getAttribute('data-review-comment');
                    var modalBody = editReviewModal.querySelector('.modal-body');
                    var reviewIdInput = modalBody.querySelector('#editReviewId');
                    var ratingSelect = modalBody.querySelector('#editRating');
                    var commentTextarea = modalBody.querySelector('#editComment');
                    reviewIdInput.value = reviewId;
                    ratingSelect.value = rating;
                    commentTextarea.value = comment;
                });
            }

            @if (User.IsInRole("Administrator"))
            {
                    <text>
                        const addTrackBtn = document.getElementById('addTrackRowBtn');
                        const trackContainer = document.getElementById('trackFieldsContainer');

                        if (addTrackBtn && trackContainer) {

                            function reindexTrackRows(container) {
                                const allRows = container.querySelectorAll('.track-input-group');
                                allRows.forEach((row, index) => {
                                    const numberSpan = row.querySelector('.track-number');
                                    if (numberSpan) {
                                        numberSpan.textContent = `${index + 1}.`;
                                    }
                                    const inputs = row.querySelectorAll('input');
                                    inputs.forEach(input => {
                                        const currentName = input.getAttribute('name');
                                        if (currentName) {
                                            const newName = currentName.replace(/Tracks\[\d+\]/g, `Tracks[${index}]`);
                                            input.setAttribute('name', newName);
                                        }
                                    });
                                });
                            }

                            addTrackBtn.addEventListener('click', function() {
                                const newIndex = trackContainer.querySelectorAll('.track-input-group').length;
                                const newTrackNumber = newIndex + 1;

                                const newRow = document.createElement('div');
                                newRow.className = 'row g-2 mb-2 align-items-center track-input-group';

                                newRow.innerHTML = `
                                    <div class="col-auto">
                                        <span class="fw-bold track-number">${newTrackNumber}.</span>
                                    </div>
                                    <div class="col">
                                        <input type="text" name="Tracks[${newIndex}].Title" class="form-control" placeholder="New Track Title" required />
                                    </div>
                                    <div class="col-auto" style="width: 120px;">
                                        <input type="number" name="Tracks[${newIndex}].DurationSeconds" class="form-control" placeholder="Duration (sec)" />
                                    </div>
                                    <div class="col-auto" style="width: 40px;">
                                            <button type="button" class="btn btn-sm btn-outline-danger remove-track-row-btn interactive-btn" title="Remove this row">
                                            <i class="fas fa-times"></i>
                                        </button>
                                    </div>
                                `;
                                trackContainer.appendChild(newRow);
                            });

                            trackContainer.addEventListener('click', function(e) {
                                const removeButton = e.target.closest('.remove-track-row-btn');
                                if (removeButton) {
                                    const rowToRemove = removeButton.closest('.track-input-group');
                                    if (rowToRemove) {
                                        rowToRemove.remove();
                                        reindexTrackRows(trackContainer);
                                    }
                                }
                            });
                        }

                        const deleteTrackModal = document.getElementById('deleteTrackModal');
                        if (deleteTrackModal) {
                            deleteTrackModal.addEventListener('show.bs.modal', function (event) {
                                const button = event.relatedTarget;
                                const trackId = button.getAttribute('data-track-id');
                                const trackTitle = button.getAttribute('data-track-title');

                                const modalTitleElement = deleteTrackModal.querySelector('#trackTitleToDelete');
                                const modalHiddenInputElement = deleteTrackModal.querySelector('#trackIdToDelete');

                                if (modalTitleElement) modalTitleElement.textContent = trackTitle;
                                if (modalHiddenInputElement) modalHiddenInputElement.value = trackId;
                            });
                        }
                    </text>
            }
        });
    </script>
}