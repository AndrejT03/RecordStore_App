@using RecordStore.Domain.DomainModels
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common
@model IPagedList<Record>

@{
    ViewData["Title"] = "Available Records";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .interactive-btn {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
    }

    .interactive-btn:hover {
        transform: translateY(-3px);
        box-shadow: 0 0.4rem 0.8rem rgba(0,0,0,.15);
    }
</style>

<div class="d-flex justify-content-between align-items-center mb-4" style="margin-top: 20px;">
    <h1 class="mb-0">Available Records</h1>
    
    @if (User.IsInRole("Administrator"))
    {
        <a asp-action="Create" class="btn btn-primary interactive-btn">Add Record</a>
    }
</div>

@using (Html.BeginForm("Index", "Records", FormMethod.Get, new { @class = "mt-2 mb-4 p-3 border rounded bg-light" }))
{
    <div class="row g-2 align-items-end">
        <div class="col-lg-3 col-md-6">
            <label class="form-label small">Search:</label>
            @Html.TextBox("searchString", ViewBag.searchString as string, new { @class = "form-control", placeholder = "Title, Artist, Label..." })
        </div>

        <div class="col-lg-2 col-md-6">
            <label class="form-label small">Genre:</label>
            @Html.DropDownList("filterGenre", Html.GetEnumSelectList<Genre>(), "All Genres", new { @class = "form-select" })
        </div>

        <div class="col-lg-1 col-md-4">
            <label class="form-label small">Format:</label>
            @Html.DropDownList("filterFormat", Html.GetEnumSelectList<RecordFormat>(), "All", new { @class = "form-select" })
        </div>

        <div class="col-lg-2 col-md-4">
            <label class="form-label small">Edition:</label>
            @Html.DropDownList("filterIsReissue", new List<SelectListItem>
            {
                new SelectListItem { Text = "All", Value = "" },
                new SelectListItem { Text = "Reissue", Value = "true" },
                new SelectListItem { Text = "Original", Value = "false" }
            }, new { @class = "form-select" })
        </div>

        <div class="col-lg-2 col-md-4">
            <label class="form-label small">Sort by:</label>
            @Html.DropDownList("sortOrder", new List<SelectListItem>
            {
                new SelectListItem { Text = "Title (A-Z)", Value = "" },
                new SelectListItem { Text = "Title (Z-A)", Value = "title_desc" },
                new SelectListItem { Text = "Price (Lowest)", Value = "Price" },
                new SelectListItem { Text = "Price (Highest)", Value = "price_desc" },
                new SelectListItem { Text = "Release Year (Newest)", Value = "date_desc" },
                new SelectListItem { Text = "Release Year (Oldest)", Value = "Date" }
            }, new { @class = "form-select" })
        </div>
        
        <div class="col-lg-2 col-md-12">
            <button type="submit" class="btn btn-info w-100 interactive-btn">Filter / Search</button>
        </div>
    </div>
}

<div class="row">
    @foreach (var item in Model)
    {
        <div class="col-md-4 col-lg-3 mb-4">
            <div class="card h-100 shadow-sm rounded">
                <img src="@item.CoverURL" class="card-img-top" alt="Cover for @item.Title" style="height: 200px; object-fit: cover;">
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title">@item.Title</h5>
                    <p class="card-text small">
                        <strong>Format:</strong> @item.Format
                    </p>
                    <h4 class="mt-auto">@item.Price $</h4>
                </div>
                <div class="card-footer bg-transparent border-top-0">
                    <div class="btn-group btn-block align-content-center" role="group">
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-info interactive-btn">Details</a>
                        
                        @if (item.StockQuantity > 0)
                        {
                            @if (User.Identity.IsAuthenticated)
                            {
                                <button type="button" class="btn btn-success ms-1 interactive-btn"
                                        data-bs-toggle="modal"
                                        data-bs-target="#addToCartModal"
                                        data-record-id="@item.Id"
                                        data-record-title="@item.Title">
                                    Add to Cart
                                </button>
                            }
                            else
                            {
                                <a asp-area="Identity" asp-page="/Account/Login"
                                   asp-route-returnUrl="@Url.Action("Index", "Records", new { 
                                       page = Model.PageNumber, 
                                       sortOrder = ViewBag.sortOrder, 
                                       searchString = ViewBag.searchString,
                                       filterGenre = ViewBag.filterGenre,
                                       filterFormat = ViewBag.filterFormat,
                                       filterIsReissue = ViewBag.filterIsReissue
                                   })"
                                   class="btn btn-success ms-1 interactive-btn">
                                    Add to Cart
                                </a>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="d-flex justify-content-center">
    @Html.PagedListPager(Model, page => Url.Action("Index",
    new { 
        page, 
        sortOrder = ViewBag.sortOrder, 
        searchString = ViewBag.searchString,
        filterGenre = ViewBag.filterGenre,
        filterFormat = ViewBag.filterFormat,
        filterIsReissue = ViewBag.filterIsReissue
    }),
        new PagedListRenderOptions
        {
            ContainerDivClasses = new[] { "pagination-container" },
            LiElementClasses = new List<string> { "page-item" },
            PageClasses = new List<string> { "page-link", "interactive-btn" }
        })
</div>

<div class="modal fade" id="addToCartModal" tabindex="-1" aria-labelledby="addToCartModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-controller="Records" asp-action="AddRecordToCart" method="post">
                <div class="modal-header">
                    <h5 class="modal-title" id="addToCartModalLabel">Add Record to Your Shopping Cart</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="RecordId" id="modalRecordId" />

                    <div class="form-group mb-3">
                        <label for="modalRecordTitle" class="form-label">Title</label>
                        <input id="modalRecordTitle" disabled class="form-control" />
                    </div>

                    <div class="form-group mb-3">
                        <label for="modalQuantity" class="form-label">Quantity</label>
                        <input name="Quantity" id="modalQuantity" type="number" class="form-control" value="1" min="1" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary interactive-btn" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success interactive-btn">Confirm and Add</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            var addToCartModal = document.getElementById('addToCartModal');
            addToCartModal.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget;

                var recordId = button.getAttribute('data-record-id');
                var recordTitle = button.getAttribute('data-record-title');
                
                var modalTitleDisplay = addToCartModal.querySelector('#modalRecordTitle');
                var modalIdInput = addToCartModal.querySelector('#modalRecordId');

                modalTitleDisplay.value = recordTitle;
                modalIdInput.value = recordId;
            });
        });
    </script>
}